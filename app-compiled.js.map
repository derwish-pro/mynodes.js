{
	"version": 3,
	"sources": [
		"app.js"
	],
	"names": [],
	"mappings": "AAAA,IAAI,UAAU,QAAQ,SAAR,CAAd;AACA,IAAI,OAAO,QAAQ,MAAR,CAAX;AACA,IAAI,UAAU,QAAQ,eAAR,CAAd;AACA,IAAI,SAAS,QAAQ,QAAR,CAAb;AACA,IAAI,eAAe,QAAQ,eAAR,CAAnB;AACA,IAAI,aAAa,QAAQ,aAAR,CAAjB;;AAEA,IAAI,MAAM,SAAV;;;AAGA,IAAI,GAAJ,CAAQ,OAAR,EAAiB,KAAK,IAAL,CAAU,SAAV,EAAqB,OAArB,CAAjB;AACA,IAAI,GAAJ,CAAQ,aAAR,EAAuB,MAAvB;;;;AAIA,IAAI,GAAJ,CAAQ,OAAO,KAAP,CAAR;AACA,IAAI,GAAJ,CAAQ,WAAW,IAAX,EAAR;AACA,IAAI,GAAJ,CAAQ,WAAW,UAAX,CAAsB,EAAC,UAAU,KAAX,EAAtB,CAAR;AACA,IAAI,GAAJ,CAAQ,cAAR;AACA,IAAI,GAAJ,CAAQ,QAAQ,QAAR,EAAkB,UAAlB,CAA6B,KAAK,IAAL,CAAU,SAAV,EAAqB,QAArB,CAA7B,CAAR;AACA,IAAI,GAAJ,CAAQ,QAAQ,MAAR,CAAe,KAAK,IAAL,CAAU,SAAV,EAAqB,QAArB,CAAf,CAAR;;AAEA,IAAI,GAAJ,CAAQ,GAAR,EAAa,QAAQ,gBAAR,CAAb;AACA,IAAI,GAAJ,CAAQ,QAAR,EAAkB,QAAQ,gBAAR,CAAlB;AACA,IAAI,GAAJ,CAAQ,WAAR,EAAqB,QAAQ,mBAAR,CAArB;;;AAGA,IAAI,GAAJ,CAAQ,UAAU,GAAV,EAAe,GAAf,EAAoB,IAApB,EAA0B;AACjC,KAAI,MAAM,IAAI,KAAJ,CAAU,WAAV,CAAV;AACA,KAAI,MAAJ,GAAa,GAAb;AACA,MAAK,GAAL;AACA,CAJD;;;;;;AAUA,IAAI,IAAI,GAAJ,CAAQ,KAAR,MAAmB,aAAvB,EAAsC;AACrC,KAAI,GAAJ,CAAQ,UAAU,GAAV,EAAe,GAAf,EAAoB,GAApB,EAAyB,IAAzB,EAA+B;AACtC,MAAI,MAAJ,CAAW,IAAI,MAAJ,IAAc,GAAzB;AACA,MAAI,MAAJ,CAAW,OAAX,EAAoB;AACnB,YAAS,IAAI,OADM;AAEnB,UAAO;AAFY,GAApB;AAIA,EAND;AAOA;;;;AAID,IAAI,GAAJ,CAAQ,UAAU,GAAV,EAAe,GAAf,EAAoB,GAApB,EAAyB,IAAzB,EAA+B;AACtC,KAAI,MAAJ,CAAW,IAAI,MAAJ,IAAc,GAAzB;AACA,KAAI,MAAJ,CAAW,OAAX,EAAoB;AACnB,WAAS,IAAI,OADM;AAEnB,SAAO;AAFY,EAApB;AAIA,CAND;;AASA,OAAO,OAAP,GAAiB,GAAjB",
	"file": "app-compiled.js",
	"sourcesContent": [
		"var express = require('express');\nvar path = require('path');\nvar favicon = require('serve-favicon');\nvar logger = require('morgan');\nvar cookieParser = require('cookie-parser');\nvar bodyParser = require('body-parser');\n\nvar app = express();\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'jade');\n\n// uncomment after placing your favicon in /public\n//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({extended: false}));\napp.use(cookieParser());\napp.use(require('stylus').middleware(path.join(__dirname, 'public')));\napp.use(express.static(path.join(__dirname, 'public')));\n\napp.use('/', require('./routes/index'));\napp.use('/users', require('./routes/users'));\napp.use('/FirstRun', require('./routes/firstrun'));\n\n// catch 404 and forward to error handler\napp.use(function (req, res, next) {\n\tvar err = new Error('Not Found');\n\terr.status = 404;\n\tnext(err);\n});\n\n// error handlers\n\n// development error handler\n// will print stacktrace\nif (app.get('env') === 'development') {\n\tapp.use(function (err, req, res, next) {\n\t\tres.status(err.status || 500);\n\t\tres.render('error', {\n\t\t\tmessage: err.message,\n\t\t\terror: err\n\t\t});\n\t});\n}\n\n// production error handler\n// no stacktraces leaked to user\napp.use(function (err, req, res, next) {\n\tres.status(err.status || 500);\n\tres.render('error', {\n\t\tmessage: err.message,\n\t\terror: {}\n\t});\n});\n\n\nmodule.exports = app;\n\n"
	]
}